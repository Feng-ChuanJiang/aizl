<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<!-- 支持shiro注解 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 对密码hash加密，加密添加了公盐和私盐 -->
	<bean id="saltHashHelper" class="org.lemonPig.os.assist.shiro.SaltHashHelper">
		<constructor-arg name="hashAlgorithmName" value="MD5" />
		<constructor-arg name="privateSalt" value="lemonPig" />
		<constructor-arg name="hashIterations" value="2" />
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="retryLimitHashedCredentialsMatcher"
		class="org.lemonPig.os.assist.shiro.RetryLimitHashedCredentialsMatcher">
		<property name="saltHashHelper" ref="saltHashHelper" />
		<property name="passwordRetryCache" ref="passwordRetryCache" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="org.lemonPig.os.assist.shiro.UserRealm">
		<property name="credentialsMatcher" ref="retryLimitHashedCredentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	<!--==================== 使用shiro的session管理（可以使用默认就是容器的session） ===开始线======================-->
	<!-- 会话ID生成器 -->
<!-- 	<bean id="sessionIdGenerator" -->
<!-- 		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" /> -->
	<!-- 会话DAO -->
<!-- 	<bean id="sessionDAO" -->
<!-- 		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"> -->
<!-- 		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" /> -->
<!-- 		<property name="sessionIdGenerator" ref="sessionIdGenerator" /> -->
<!-- 	</bean> -->
	<!-- 会话验证调度器 -->
<!-- 	<bean id="sessionValidationScheduler" -->
<!-- 		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
<!-- 		<property name="sessionValidationInterval" value="1800000" /> -->
<!-- 		<property name="sessionManager" ref="sessionManager" /> -->
<!-- 	</bean> -->
	<!-- 会话Cookie模板 -->
<!-- 	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie"> -->
<!-- 		<constructor-arg value="sid" /> -->
<!-- 		<property name="httpOnly" value="true" /> -->
<!-- 		<property name="maxAge" value="180000" /> -->
<!-- 	</bean> -->
	<!-- 会话管理器 -->
<!-- 	<bean id="sessionManager" -->
<!-- 		class="org.apache.shiro.web.session.mgt.OnlineWebSessionManager"> -->
<!-- 		<property name="globalSessionTimeout" value="1800000" /> -->
<!-- 		<property name="deleteInvalidSessions" value="true" /> -->
<!-- 		<property name="sessionValidationSchedulerEnabled" value="true" /> -->
<!-- 		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
<!-- 		<property name="sessionDAO" ref="sessionDAO" /> -->
<!-- 		<property name="sessionIdCookieEnabled" value="true" /> -->
<!-- 		<property name="sessionIdCookie" ref="sessionIdCookie" /> -->
<!-- 	</bean> -->
	<!-- ===========================使用shiro的session管理==结束线================================ -->
	<!-- ================================记住登录==开始线========================================= -->
	<!-- 登录cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- ================================记住登录==结束线========================================== -->

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
<!-- 		<property name="sessionMode" value="native" /> -->
		<property name="realm" ref="userRealm" />
		<!-- 指定session管理器 -->
<!-- 		<property name="sessionManager" ref="sessionManager" /> -->
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- shiro form表单过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.lemonPig.os.assist.shiro.CustomFormAuthenticationFilter">
		<property name="usernameParam" value="${shiro.usernameParam}" />
		<property name="passwordParam" value="${shiro.passwordParam}" />
		<!-- 优先获取shiroFilter的loginUrl -->
		<property name="failureKeyAttribute" value="${shiro.loginFailAttributeName}" />
		<property name="loginUrl" value="${shiro.loginUrl}" />
		<property name="loginPage" value="${shiro.loginPage}" />
		<property name="successUrl" value="${shiro.successUrl}" />
	</bean>
	<!-- 验证码创建过滤器 -->
	<bean id="jcaptchaCreateShiroFilter" class="org.lemonPig.os.assist.shiro.JcaptchaCreateShiroFilter">
	</bean>
	<!-- 验证码验证过滤器 -->
	<bean id="jCaptchaValidateFilter"
		class="org.lemonPig.os.assist.shiro.JcaptchaValidateShiroFilter">
		<property name="jcaptchaEbabled" value="${shiro.jcaptchaEbabled}" />
		<property name="jcaptchaParam" value="${shiro.jcaptchaParam}" />
		<property name="jcaptchaFailAttributeName" value="${shiro.loginFailAttributeName}" />
	</bean>
	<!-- Shiro的Web过滤器拦截配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${shiro.loginUrl}" />
		<property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="jcapc" value-ref="jcaptchaCreateShiroFilter" />
				<entry key="jcapv" value-ref="jCaptchaValidateFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login.jsp = anon
				/index.jsp = anon
				/ajax/** = anon
				/css/** = anon
				/fonts/** = anon
				/img/** = anon
				/js/** = anon
				/sound/** = anon
				/index.jsp = anon
				/jcaptcha* =jcapc
				/user/login =jcapv,authc
				/logout = logout
				/** = user
			</value>
		</property>
	</bean>
</beans>