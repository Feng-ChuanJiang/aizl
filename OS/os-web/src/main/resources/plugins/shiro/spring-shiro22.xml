<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="false">

	<!-- userRealm begin -->
	<!-- 对密码hash加密，加密添加了公盐和私盐 -->
	<bean id="saltHashHelper" class="org.lemonPig.os.assist.shiro.SaltHashHelper">
		<constructor-arg value="MD5" />
		<constructor-arg value="lemonPig" />
		<constructor-arg value="2" />
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="retryLimitHashedCredentialsMatcher"
		class="org.lemonPig.os.assist.shiro.RetryLimitHashedCredentialsMatcher">
		<property name="saltHashHelper" ref="saltHashHelper" />
		<property name="passwordRetryCache" ref="passwordRetryCache" />
	</bean>
	<!-- 认证数据源 Realm实现 -->
	<!-- Realm实现 -->
	<bean id="userRealm" class="org.lemonPig.os.web.support.UserRealm">
		<property name="credentialsMatcher" ref="retryLimitHashedCredentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	<!-- userRealm end -->


	<!-- cacheManager begin -->
	<!-- cacheManager end -->


	<!-- sessionManager begin -->
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话缓存DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- sessionManager end -->

	<!-- securityManager begin -->
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<!-- <property name="rememberMeManager" ref="rememberMeManager"/> -->
	</bean>
	<!-- securityManager end -->

	<bean id="jcaptchaCreateShiroFilter" class="org.lemonPig.os.assist.shiro.JcaptchaCreateShiroFilter">
	</bean>

	<!-- 验证码验证过滤器 -->
	<bean id="jCaptchaValidateFilter"
		class="org.lemonPig.os.assist.shiro.JcaptchaValidateShiroFilter">
		<property name="jcaptchaEbabled" value="${shiro.jcaptchaEbabled}" />
		<property name="jcaptchaParam" value="${shiro.jcaptchaParam}" />
		<property name="jcaptchaFailAttributeName" value="${shiro.loginFailAttributeName}" />
	</bean>

	<!-- shiroFilter begin -->
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="loginUrl" value="/login.jsp" />
	</bean>
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${shiro.loginUrl}" />
		<property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="jcapc" value-ref="jcaptchaCreateShiroFilter" />
				<entry key="jcapv" value-ref="jCaptchaValidateFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/jsp/permission/login.jsp = anon
				/user/queryPageList = anon
				/jsp/permission/user/user.jsp = anon
				/ajax/** = anon
				/css/** = anon
				/fonts/** = anon
				/img/** = anon
				/js/** = anon
				/sound/** = anon
				/index.jsp = anon
				/jcaptcha* =jcapc
				/user/login =jcapv,authc
				/logout=logout
				/** = user
			</value>
		</property>
	</bean>
	<!-- shiroFilter end -->

	<!-- 生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>